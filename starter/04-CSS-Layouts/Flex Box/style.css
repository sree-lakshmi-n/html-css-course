* {
  box-sizing: border-box;
}
.el--1 {
  background-color: blueviolet;
  align-self: flex-start;
  /* flex-grow: 1; */
  /* It fills up remaining space*/
}
.el--2 {
  background-color: orangered;
  order: 2;
}
.el--3 {
  background-color: green;
  height: 150px;
}
.el--4 {
  background-color: goldenrod;
  align-self: stretch;
}
.el--5 {
  background-color: palevioletred;
  order: 1;
}
.el--6 {
  background-color: steelblue;
  order: -1;
}
.el--7 {
  background-color: yellow;
}
.el--8 {
  background-color: crimson;
}

.container {
  /* STARTER */
  font-family: sans-serif;
  background-color: #ddd;
  font-size: 40px;
  margin: 40px;

  /* FLEXBOX */
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}
.el {
  /* DEFAULTS
  flex-grow: 0;
  flex-shrink: 1;
  flex-basis: auto; */

  /* flex-basis: 200px; */
  /*
By default, Flexbox is allowed to shrink elements so that they fit the container.
And so that's what the flex shrink here set to one actually means.
So again, if there is not enough space in a container to fit the items with the size that we described here using flex basis, then Flexbox is allowed to shrink these items by default because flex shrink is set to one.
However, if we want to change that, then we can simply set this to zero.
*/
  /* flex-shrink: 0; */
  /* Setting flex shrink to zero is not always advisable.*/
  /* flex-grow: 1; */

  flex: 1;
  /* flex: 0 0 200px; */
}
